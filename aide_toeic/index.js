(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (global){
// Generated by Haxe 4.0.0-rc.5+4a745347f
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Main = function() { };
Main.main = function() {
	ReactDOM.render({ $$typeof : $$tre, type : view_App, props : { }, key : null, ref : null},window.document.getElementById("app"));
};
var Random = function() { };
Random.shuffle = function(arr) {
	if(arr != null) {
		var _g = 0;
		var _g1 = arr.length;
		while(_g < _g1) {
			var i = _g++;
			var j = Math.floor((arr.length - 1 + 1) * Math.random());
			var a = arr[i];
			var b = arr[j];
			arr[i] = b;
			arr[j] = a;
		}
	}
	return arr;
};
var Std = function() { };
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var model_Data = function() { };
var model_QuestionHandler = function() { };
model_QuestionHandler.init = function() {
	model_QuestionHandler.dictionnary = model_QuestionHandler.load();
};
model_QuestionHandler.get_next = function() {
	var v = model_QuestionHandler.dictionnary[Std.random(model_QuestionHandler.dictionnary.length)];
	var poss = [v.french];
	poss.push(model_QuestionHandler.dictionnary[Std.random(model_QuestionHandler.dictionnary.length)].french);
	poss.push(model_QuestionHandler.dictionnary[Std.random(model_QuestionHandler.dictionnary.length)].french);
	poss.push(model_QuestionHandler.dictionnary[Std.random(model_QuestionHandler.dictionnary.length)].french);
	Random.shuffle(poss);
	model_QuestionHandler.current = { question : v.english, possibilities : poss, answer : v.french};
	return model_QuestionHandler.current;
};
model_QuestionHandler.load = function() {
	return model_Data.value;
};
var view_App = function(props) {
	React.Component.call(this,props);
	model_QuestionHandler.init();
};
view_App.__super__ = React.Component;
view_App.prototype = $extend(React.Component.prototype,{
	render: function() {
		return { $$typeof : $$tre, type : view_QuestionView, props : { }, key : null, ref : null};
	}
});
var view_QuestionView = function(props) {
	React.Component.call(this,props);
	model_QuestionHandler.get_next();
};
view_QuestionView.__super__ = React.Component;
view_QuestionView.prototype = $extend(React.Component.prototype,{
	render: function() {
		var answers = [];
		var _g = 0;
		var _g1 = model_QuestionHandler.current.possibilities;
		while(_g < _g1.length) {
			var poss = _g1[_g];
			++_g;
			if(poss == model_QuestionHandler.current.answer) {
				answers.push({ $$typeof : $$tre, type : "div", props : { onClick : $bind(this,this.win), className : "possibility", children : [" ",{ $$typeof : $$tre, type : "p", props : { children : poss}, key : null, ref : null}," "]}, key : null, ref : null});
			} else {
				answers.push({ $$typeof : $$tre, type : "div", props : { onClick : $bind(this,this.lose), className : "possibility", children : [" ",{ $$typeof : $$tre, type : "p", props : { children : poss}, key : null, ref : null}," "]}, key : null, ref : null});
			}
		}
		var tmp = { $$typeof : $$tre, type : "p", props : { className : "question", children : model_QuestionHandler.current.question}, key : null, ref : null};
		var tmp1 = React.createElement("div",{ className : "possibility-wrapper"},answers);
		return React.createElement("div",{ className : "wrapper"},tmp,tmp1);
	}
	,win: function() {
		window.alert("Bonne réponse !");
		model_QuestionHandler.get_next();
		this.forceUpdate();
	}
	,lose: function() {
		window.alert("Mauvaise réponse !");
		model_QuestionHandler.get_next();
		this.forceUpdate();
	}
});
var view_QuestionDisplay = function(props) {
	React.Component.call(this,props);
	this.current = model_QuestionHandler.current;
};
view_QuestionDisplay.__super__ = React.Component;
view_QuestionDisplay.prototype = $extend(React.Component.prototype,{
	render: function() {
		return { $$typeof : $$tre, type : "p", props : { className : "question", children : this.current.question}, key : null, ref : null};
	}
});
var view_QuestionAnswersDisplay = function(props) {
	React.Component.call(this,props);
	this.current = model_QuestionHandler.current;
	this.onWin = props.onWin;
	this.onLose = props.onLose;
};
view_QuestionAnswersDisplay.__super__ = React.Component;
view_QuestionAnswersDisplay.prototype = $extend(React.Component.prototype,{
	render: function() {
		var answers = [];
		var _g = 0;
		var _g1 = this.current.possibilities;
		while(_g < _g1.length) {
			var poss = _g1[_g];
			++_g;
			if(poss == this.current.answer) {
				answers.push({ $$typeof : $$tre, type : "div", props : { onClick : this.onWin, className : "possibility", children : [" ",poss]}, key : null, ref : null});
			} else {
				answers.push({ $$typeof : $$tre, type : "div", props : { onClick : this.onLose, className : "possibility", children : [" ",poss]}, key : null, ref : null});
			}
		}
		return React.createElement("div",{ className : "possibility-wrapper"},answers);
	}
});
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if(typeof $global.$haxeUID == "undefined") $global.$haxeUID = 0;
var $$tre = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;
model_Data.value = [{ english : "worry about", french : "être préoccupé par"},{ english : "think about", french : "réfléchir à"},{ english : "look at", french : "regarder"},{ english : "increase [by]", french : "augmenter de"},{ english : "apply for", french : "poser sa candidature à"},{ english : "hope for", french : "espérer"},{ english : "look for", french : "chercher"},{ english : "search for", french : "rechercher"},{ english : "pay for", french : "payer"},{ english : "apology for", french : "s'excuser pour"},{ english : "wait for", french : "attendre"},{ english : "benefit from", french : "bénéficier de"},{ english : "differ from", french : "différer de"},{ english : "retire from", french : "prendre sa retraite"},{ english : "resign from", french : "démissionner de"},{ english : "suffer from", french : "souffrir de"},{ english : "protect from", french : "protéger de"},{ english : "particpate/take part in", french : "participer à"},{ english : "succeed in", french : "réussir"},{ english : "think of", french : "penser de/penser à"},{ english : "approve of", french : "approuver"},{ english : "consists of", french : "être composé de"},{ english : "agree on", french : "être d'accord sur"},{ english : "insist on", french : "insister sur"},{ english : "rely on", french : "faire confiance à"},{ english : "decide on", french : "décider"},{ english : "depend on", french : "dépendre de"},{ english : "increase to", french : "augmenter pour atteindre"},{ english : "object to", french : "être contre"},{ english : "complain to", french : "se plaindre à"},{ english : "listen to", french : "écouter"},{ english : "subscribe to", french : "être abonné à"},{ english : "belong to", french : "appartenir à"},{ english : "comply with", french : "se conformer à"},{ english : "agree with", french : "être d'accord avec"},{ english : "deal with", french : "traiter"},{ english : "exchange ... for", french : "échanger ... contre"},{ english : "ask ... for", french : "demander ... à"},{ english : "borrow ... from ", french : "emprunter ... à"},{ english : "divide ... into ", french : "diviser ... en"},{ english : "convince ... of", french : "convaincre ... de"},{ english : "remind ... of", french : "rappeler ... à"},{ english : "spend ... on", french : "dépenser ... en"},{ english : "congratulate ... on", french : "féliciter ... pour"},{ english : "explain ... to", french : "expliquer ... à"},{ english : "introduce ... to", french : "présenter ... à"},{ english : "place a trial order with", french : "passer une commande à"},{ english : "supply/provide (1) with (2)", french : "forunir (2) à (1)"},{ english : "be very good at", french : "être bon en"},{ english : "ready for", french : "prêt pour"},{ english : "suitable for", french : "adapté à"},{ english : "late for", french : "en retard à"},{ english : "eligible for", french : "en droit d'obtenir"},{ english : "responsible for", french : "responsable de"},{ english : "absent from", french : "absent de"},{ english : "interested in", french : "intéressé par"},{ english : "involved in", french : "impliqué dans"},{ english : "short of", french : "à court de"},{ english : "capable of", french : "capable de"},{ english : "aware of", french : "au courant de"},{ english : "dependant on", french : "dépendant de"},{ english : "opposed to", french : "opposé à"},{ english : "accustomed to", french : "habitué à"},{ english : "similar to", french : "similaire à"},{ english : "satisfied with", french : "satisfait de"},{ english : "answer", french : "répondre à"},{ english : "discuss", french : "discuter de"},{ english : "enter", french : "entrer dans"},{ english : "fail", french : "échouer à"},{ english : "lack", french : "manquer de"},{ english : "phone", french : "téléphoner à"},{ english : "tell", french : "dire à"},{ english : "Je t'aime :*", french : "land of baguette"}];
view_App.displayName = "App";
view_QuestionView.displayName = "QuestionView";
view_QuestionDisplay.displayName = "QuestionDisplay";
view_QuestionAnswersDisplay.displayName = "QuestionAnswersDisplay";
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[1]);
